name: Ubuntu

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Release, Debug]
        compiler:
          - { cpp: g++, cc: gcc }
          - { cpp: clang++, cc: clang }
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libgl1-mesa-dev libvulkan-dev libx11-xcb-dev libxcb-dri2-0-dev libxcb-glx0-dev libxcb-icccm4-dev libxcb-keysyms1-dev libxcb-randr0-dev libxrandr-dev libxxf86vm-dev mesa-common-dev
          
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: linux-${{ matrix.build_type }}-${{ matrix.compiler.cpp }}
          
      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@main
        with:
          vulkan-query-version: 1.3.204.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          vulkan-use-cache: true
          
      - name: Configure CMake
        run: |
          cmake -B ${{ github.workspace }}/build \
                -D CMAKE_C_COMPILER=${{ matrix.compiler.cc }} \
                -D CMAKE_CXX_COMPILER=${{ matrix.compiler.cpp }} \
                -D CMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                -D BUILD_SHADERS=OFF \
                -D ENABLE_XRVK=ON \
                -S ${{ github.workspace }}
        env:
          CMAKE_C_COMPILER_LAUNCHER: ccache
          CMAKE_CXX_COMPILER_LAUNCHER: ccache
        
      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }} --parallel
        