name: Build xrlib-demos

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        build_type: [Release, Debug]
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: windows-${{ matrix.build_type }}-clang
          
      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@main
        with:
          vulkan-query-version: 1.3.204.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          vulkan-use-cache: true
          
      - name: Configure CMake
        shell: cmd
        run: |
          cmake -B ${{ github.workspace }}/build ^
                -D CMAKE_BUILD_TYPE=${{ matrix.build_type }} ^
                -D BUILD_SHADERS=OFF ^
                -D ENABLE_XRVK=ON ^
                -S ${{ github.workspace }}
        
      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }}
            
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Release, Debug]
        compiler:
          - { cpp: g++, cc: gcc }
          - { cpp: clang++, cc: clang }
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libgl1-mesa-dev libvulkan-dev libx11-xcb-dev libxcb-dri2-0-dev libxcb-glx0-dev libxcb-icccm4-dev libxcb-keysyms1-dev libxcb-randr0-dev libxrandr-dev libxxf86vm-dev mesa-common-dev
          
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: linux-${{ matrix.build_type }}-${{ matrix.compiler.cpp }}
          
      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@main
        with:
          vulkan-query-version: 1.3.204.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          vulkan-use-cache: true
          
      - name: Configure CMake
        run: |
          cmake -B ${{ github.workspace }}/build \
                -D CMAKE_C_COMPILER=${{ matrix.compiler.cc }} \
                -D CMAKE_CXX_COMPILER=${{ matrix.compiler.cpp }} \
                -D CMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                -D BUILD_SHADERS=OFF \
                -D ENABLE_XRVK=ON \
                -S ${{ github.workspace }}
        env:
          CMAKE_C_COMPILER_LAUNCHER: ccache
          CMAKE_CXX_COMPILER_LAUNCHER: ccache
        
      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }} --parallel
            
  build-android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        demo:
          - demo-01_checkxr
          - demo-02_displayxr
          - demo-03_passthroughxr
          - demo-04_handtrackingxr
          - demo-05_inputxr
          - demo-06_interactionsxr
        
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25c
          
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: android-${{ matrix.demo }}
          
      - name: Create dummy keystore properties
        run: |
          echo "SIGNING_KEY_ALIAS=debug" > keystore.properties
          echo "SIGNING_KEY_PASSWORD=android" >> keystore.properties
          echo "SIGNING_KEYSTORE_FILE=$ANDROID_HOME/debug.keystore" >> keystore.properties
          echo "SIGNING_KEYSTORE_PASSWORD=android" >> keystore.properties

      - name: Make Gradle wrapper executable
        run: |
          chmod +x ${{ github.workspace }}/${{ matrix.demo }}/android/gradlew

      - name: Build Android APK for ${{ matrix.demo }}
        working-directory: ${{ github.workspace }}/${{ matrix.demo }}/android
        run: |
          cp ${{ github.workspace }}/keystore.properties ./
          ./gradlew assembleDebug
        env:
          CMAKE_C_COMPILER_LAUNCHER: ccache
          CMAKE_CXX_COMPILER_LAUNCHER: ccache
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}